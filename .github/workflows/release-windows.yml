on:
  push:
    tags:
      - 'v*'
name: Build-Release[Windows]

jobs:
  build_and_package:
    runs-on: windows-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      # 缓存 Flutter SDK
      - name: Cache Flutter SDK
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.FLUTTER_HOME }}
            C:\hostedtoolcache\windows\flutter
          key: ${{ runner.os }}-flutter-3.27.1-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-3.27.1-
            ${{ runner.os }}-flutter-

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.1'
          channel: 'stable'
          cache: true

      # 缓存 pub 依赖
      - name: Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.PUB_CACHE }}
            ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Install dependencies
        run: flutter pub get

      # 获取最新 release 信息
      - name: Get latest release
        id: get_release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.RELEASE_TOKEN }}
          script: |
            const { data: releases } = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            const latestRelease = releases[0];
            const version = latestRelease.tag_name.replace(/^v/, '') + '+1'
            core.setOutput('upload_url', latestRelease.upload_url);
            core.setOutput('tag_name', latestRelease.tag_name);
            core.setOutput('version', version);

      # 修改版本号
      - name: Update version
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'pubspec.yaml'
          propertyPath: 'version'
          value: ${{ steps.get_release.outputs.version }}
          commitChange: false

      - name: Write secrets file
        uses: DamianReeves/write-file-action@master
        with:
          path: ${{ secrets.WINDOWS_PATH_KEY }}
          contents: ${{ secrets.WINDOWS_PATH_VALUES }}
          write-mode: append

      # 构建
      - name: Build Flutter Windows app
        run: flutter build windows --release

      # 缓存 UPX
      - name: Cache UPX
        id: cache-upx
        uses: actions/cache@v4
        with:
          path: C:\ProgramData\chocolatey\lib\upx
          key: ${{ runner.os }}-upx

      - name: Install UPX
        if: steps.cache-upx.outputs.cache-hit != 'true'
        run: choco install upx -y

      # 压缩可执行文件
      - name: Compress exe/dll with UPX
        run: |
          cd build/windows/x64/runner/Release
          upx --best --lzma *.exe || true
          upx --best --lzma *.dll || true
        continue-on-error: true

      # 打包
      - name: Package Release zip
        run: |
          cd build/windows/x64/runner/Release
          7z a -tzip -mx9 ${{ github.workspace }}/build/oasx_${{ steps.get_release.outputs.tag_name }}_windows.zip *

      # 上传到 Release
      - name: Upload Release Windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./build/oasx_${{ steps.get_release.outputs.tag_name }}_windows.zip
          asset_name: oasx_${{ steps.get_release.outputs.tag_name }}_windows.zip
          asset_content_type: application/zip